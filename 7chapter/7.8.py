# coding=utf-8

'''
类属性、对象属性

如果需要在类外修改类属性，必须通过类对象去引用然后进行修改。
如果通过实例对象去引用，会产生一个同名的实例属性，这种方式修改的是实例属性，不会影响到类属性，
并且之后如果通过实例对象去引用该名称的属性，实例属性会强制屏蔽掉类属性，即引用的是实例属性，除非删除了该实例属性。

类在程序空间中也是对象----类对象
通过类创建出来的对象------实例对象

实例属性和具体的某个实例对象有关系，不同的实例属性不共享

类属性在多个对象之间 共享一个类属性


'''
class Tools(object):

    num = 0  # 类属性

    def __init__(self, new_name):
        self.name = new_name   # 实例属性
        Tools.num += 1

tool1 = Tools("铲子")
tool2 = Tools("洛阳铲")
tool3 = Tools("木板")

print(Tools.num)
